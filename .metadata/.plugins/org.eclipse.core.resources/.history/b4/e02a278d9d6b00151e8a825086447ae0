package algoritmos;

public class kmp3 {

	 public static int KMP(String S, String W)
	  {
	    int i = 0,m = 0;
	    int T[]= CreateT(W);
	    while((m+i)<S.length())
	    {
	     if(W.charAt(i) == S.charAt(m+i))
	     {
	      if(i == (W.length()-1))
	       return m;
	      i++;
	     }
	    
	     else
	     {
	      m = m+i-T[i];
	      if(T[i]>-1)
	       i = T[i];//next round, we can start checking from here
	      else
	       i = 0;
	     }
	    }
	   
	    return S.length();
	     }
	 
	 public static int[] CreateT(String W)
	 {
	  int T[] = new int [W.length()];
	  int pos = 2;
	  int cnd = 0;
	  T[0] = -1;
	  T[1] = 0;
	  while(pos<W.length())
	  {
	    if(W.charAt(cnd) == W.charAt(pos-1))
	    { 
	     cnd++;
	     T[pos] = cnd;
	    
	     pos++;
	    }
	    else if(cnd>0)
	    {
	     cnd = T[cnd];
	    }
	    else
	    {
	     T[pos] = 0;
	     pos++;
	    }
	     }
	  for(int i = 0;i<W.length();i++)
	  {
	   System.out.println(T[i]+" ");
	  }
	  return T;
	 }
	  
	 public static void main(String args[])
	 {
	  String S = "ABC ABCDAB ABCDABCDABDE";
	  String W = "ABCDABD";
	  System.out.println(KMP(S,W));
	 }

	} ƒ
}
